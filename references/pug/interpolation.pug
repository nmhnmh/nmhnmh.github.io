//js expression interpolation in attributes
- var url = 'pug-test.html';
a(href='/' + url) Link
- url = 'https://example.com/'
a(href=url) Another link

//js template string interpolation in attributes
- var btnType = 'info'
- var btnSize = 'lg'
button(type='button' class='btn btn-' + btnType + ' btn-' + btnSize)
= '\n'
button(type='button' class=`btn btn-${btnType} btn-${btnSize}`)

// interpolation in text
- var title = "On Dogs: Man's Best Friend";
- var author = "enlore";
- var theGreat = "<span>escape!</span>";

h1= title
p Written with love by #{author}
p This will be safe: #{theGreat}

// allows any valid js expression
- var msg = "not my inside voice";
p This is #{msg.toUpperCase()}

// esacpe to include literal #{}
p Escaping works with \#{interpolation}
p Interpolation works with #{'#{interpolation}'} too!

// unescaped interpolation with !{}
- var riskyBusiness = "<em>Some of the girls are wearing my mother's clothing.</em>";
.quote
  p Joel: !{riskyBusiness}

// tag interpolation with #[]
p.
  This is a very long and boring paragraph that spans multiple lines.
  Suddenly there is a #[strong strongly worded phrase] that cannot be
  #[em ignored].
// three almost equal texts, with the exception of spaces
// no space around inline tags
p
  | If I don't write the paragraph with tag interpolation, tags like
  strong strong
  | and
  em em
  | might produce unexpected results.
// space around inline tags
p
  | If I don't write the paragraph with tag interpolation, tags like <strong>strong</strong> and <em>em</em> might produce unexpected results.
// space around inline tags
p.
  If I do, whitespace is #[strong respected] and #[em everybody] is happy.
